type User {
  created: Number,
  updated: Number,
  name: String,
  surname: String,
  email: String
}

path /users/{$userid} is User{
  read() { isAllowed($userid) }
  write() { isAllowed($userid) }
}

type ImageCategory extends String {
  validate() { this.test(/^family|friends|work|other|unknown$/) }
}

type ImageStatus extends String {
  validate() { this.test(/^storage|local|deleted|unknown$/) }
}

type Image {
  created: Number,
  updated: Number,
  name: String,
  category: ImageCategory,
  status: ImageStatus,
  description: String,
  comments: String,
  location: String,
  storage: String
}

path /images/{$userid} {
  read() { isAllowed($userid) }
}

path /images/{$userid}/active/{imageId} is Image{
  write() { isAllowed($userid) }
}

path /images/{$userid}/deleted/{imageId} is Image{
  write() { isAllowed($userid) }
}

isAllowed(uid){
  auth != null && auth.uid === uid
}